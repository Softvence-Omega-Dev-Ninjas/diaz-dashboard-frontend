name: Lint, Format, Build, Push & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: ['main']

jobs:
  ci-check:
    name: Lint, Format, Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install dependencies
        run: npm ci --include=optional

      - name: Run Lint
        run: npm run lint

      - name: Format Check
        run: npm run format

      - name: Build Project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist/

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: ci-check
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PACKAGE_NAME }}:${{ secrets.PACKAGE_VERSION }}

  deploy-docker:
    name: Deploy Docker Containers
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy Compose File to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          source: 'compose.yaml'
          target: '/home/${{ secrets.VPS_USER }}/${{ secrets.PACKAGE_NAME }}'

      - name: Deploy Docker Containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd ~/${{ secrets.PACKAGE_NAME }}
            sudo docker compose pull
            sudo docker compose down --remove-orphans
            sudo docker compose up -d
            sudo docker image prune -f

  deploy-build-files:
    name: Deploy Static Build Files
    runs-on: ubuntu-latest
    needs: [ci-check]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: dist/

      - name: Upload new build files to temp directory
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          source: 'dist/*'
          target: '/home/${{ secrets.VPS_USER }}/deploy-temp'

      - name: Move build files into /var/www/html
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /var/www/html
            sudo rm -rf /var/www/html/*

            # Move files
            sudo mv ~/deploy-temp/* /var/www/html/

            # Fix permissions: readable by all (Caddy can read)
            sudo chmod -R 755 /var/www/html
            sudo chown -R $USER:$USER /var/www/html

            # Clean up
            sudo rm -rf ~/deploy-temp
